name: test_branch_verify_api_test
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Triggers the workflow on pull requests but only for the "test" branch
  pull_request:
    types: [opened, reopened]
    branches: [ "test_592626943" ]
    
jobs: 
  verify_local_rules:   
    runs-on: self-hosted  
    
    steps:  
      - uses: actions/checkout@v3
      - name: Setting up the environment 
        env: 
          API_KEY: ${{ secrets.API_KEY}}
        run: |
          echo "Current working directory: $(pwd)"
          cd /home/ubuntu/detection-rules/tools/detection_engineering
          echo "Setting up Python environment."
          pip install --upgrade pip
          pip install virtualenv
          python -m virtualenv venv
          source venv/bin/activate
          which python  # Check that the virtual environment is activated.
          python --version ; pip --version
          #Install project requirements.
          pip install -r requirements.txt
          # Setting up git environment.
          git --version
          cd ~
          rm -rf /home/ubuntu/cloned
          echo "head branch: $GITHUB_HEAD_REF"
          git clone -b $GITHUB_HEAD_REF "https://github.com/curiousghost/detection-rules.git" "/home/ubuntu/cloned"
          cd /home/ubuntu/cloned/tools/detection_engineering
          echo "$API_KEY" > .env
          output=$(python -m detection_engineering --verify-rules)
          # output="${output//'%'/'%25'}"
          # output="${output//$'\n'/'%0A'}"
          # output="${output//$'\r'/'%0D'}" 
          # echo "verify_result=$output" >> $GITHUB_ENV
          # echo "verify_result is set to: $output"
      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `Rules Verification Failed. ${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
          
