name: linux_runner_2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "test_592626943" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs: 
  setup_chronicle_environment:   
    runs-on: self-hosted  
    
    steps:  
      - uses: actions/checkout@v3
      - name: Setting up the environment 
        env: 
          API_KEY: ${{ secrets.API_KEY}}
        run: |
          echo "Current working directory: $(pwd)"
          cd /home/ubuntu/detection-rules/tools/detection_engineering
          #echo CHRONICLE_API_CREDENTIALS=$API_KEY >> .env
          #cat .env
          echo "Setting up Python environment."
          pip install --upgrade pip
          pip install virtualenv
          python -m virtualenv venv
          source venv/bin/activate
          which python  # Check that the virtual environment is activated.
          python --version ; pip --version
          #Install project requirements.
          pip install -r requirements.txt
          # Setting up git environment.
          git --version
          cd ~
          rm -rf /home/ubuntu/cloned
          git clone -b test_592626943 "https://github.com/curiousghost/detection-rules.git" "/home/ubuntu/cloned"
          cd /home/ubuntu/cloned/tools/detection_engineering
          touch .env
          echo "$API_KEY" > .env
          # Pull the latest version of all rules from Chronicle
          echo "Attempting to pull the latest version of all rules from Chronicle"
          python -m detection_engineering --pull-latest-rules
          #Add files to staging
          git add rules rule_config.yaml
          echo "Checking for updates to rules."
          git status
          #Get a count of changes.
          CHANGES=$(git status --porcelain | wc -l)
          echo "$CHANGES"
          #echo "There are $CHANGES changes to commit" && [ "$CHANGES" -gt "0" ] && git commit -m "latest rules pulled from chronicle api" && git push origin "${CI_DEFAULT_BRANCH}" -o ci.skip
          echo "Attempting to update rules in Chronicle based on local rule files."
          python -m detection_engineering --update-remote-rules










          
